#+EXPORT_FILE_NAME: README.md
#+OPTIONS: toc:nil |:t ^:nil tags:nil

#+NAME: name
#+BEGIN_SRC text :exports none :noweb yes
loadstar_sensors_interface
#+END_SRC

#+NAME: version
#+BEGIN_SRC text :exports none :noweb yes
0.7.0
#+END_SRC

#+NAME: repository-name
#+BEGIN_SRC text :exports none :noweb yes
loadstar_sensors_interface_python
#+END_SRC

#+NAME: guix-name
#+BEGIN_SRC text :exports none :noweb yes
python-loadstar-sensors-interface
#+END_SRC

#+NAME: description
#+BEGIN_SRC text :exports none :noweb yes
Python interface to Loadstar Sensors USB devices.
#+END_SRC

#+NAME: license
#+BEGIN_SRC text :exports none :noweb yes
BSD 3-Clause License
#+END_SRC

#+NAME: guix-license
#+BEGIN_SRC text :exports none :noweb yes
license:bsd-3
#+END_SRC

#+NAME: license-files
#+BEGIN_SRC text :exports none :noweb yes
LICENSE
#+END_SRC

#+NAME: url
#+BEGIN_SRC text :exports none :noweb yes
https://github.com/janelia-pypi/<<repository-name>>
#+END_SRC

#+NAME: author
#+BEGIN_SRC text :exports none :noweb yes
Peter Polidoro
#+END_SRC

#+NAME: email
#+BEGIN_SRC text :exports none :noweb yes
peter@polidoro.io
#+END_SRC

#+NAME: copyright
#+BEGIN_SRC text :exports none :noweb yes
2022 Howard Hughes Medical Institute
#+END_SRC

#+NAME: python-dependencies
#+BEGIN_SRC text :exports none :noweb yes
serial_interface
click
plotext
#+END_SRC

#+NAME: guix-dependencies
#+BEGIN_SRC text :exports none :noweb yes
python-serial-interface
python-click
python-plotext
#+END_SRC

#+NAME: reference
#+BEGIN_SRC text :exports none :noweb yes
https://www.loadstarsensors.com/
#+END_SRC

#+NAME: command-line-interface
#+BEGIN_SRC text :exports none :noweb yes
loadstar
#+END_SRC

#+BEGIN_EXAMPLE
<!-- README.md is generated automatically from .single-source-of-truth.org
File edits may be overwritten! -->
#+END_EXAMPLE

* About

#+BEGIN_SRC markdown :noweb yes
- Name: <<name>>
- Version: <<version>>
- Description: <<description>>
- License: <<license>>
- URL: <<url>>
- Author: <<author>>
- Email: <<email>>
- Copyright: <<copyright>>
- Reference: <<reference>>
- Dependencies:
  - <<python-dependencies>>
#+END_SRC

* Example Usage

** Python

#+BEGIN_SRC python
from loadstar_sensors_interface import LoadstarSensorsInterface, ScaleFactor
dev = LoadstarSensorsInterface() # Try to automatically detect port
dev = LoadstarSensorsInterface(port='/dev/ttyUSB0') # Linux specific port
dev = LoadstarSensorsInterface(port='/dev/tty.usbmodem262471') # Mac OS X specific port
dev = LoadstarSensorsInterface(port='COM3') # Windows specific port

dev.print_device_info()
dev.tare()
dev.get_sensor_value()

dev.get_device_port()
dev.get_device_model()
dev.get_device_id()
dev.get_native_units()
dev.get_load_capacity()
dev.set_averaging_window(10) # 1-1024 samples
dev.set_averaging_threshold(10) # 1-100 percent

dev.set_scale_factor(ScaleFactor.LB_TO_GM)
dev.get_scale_factor()

dev.set_scale_factor('ONE') # ScaleFactor string
dev.get_scale_factor()

dev.set_scale_factor(25.4) # float e.g. in to mm
dev.get_scale_factor()

dev.get_settings()
#+END_SRC

** Command Line

#+BEGIN_SRC sh
loadstar --port /dev/ttyUSB0 --tare --scale-factor LB_TO_GM
#+END_SRC

* Installation

[[https://github.com/janelia-pypi/python_setup]]

** Linux

*** udev rules

[[https://docs.platformio.org/en/stable/core/installation/udev-rules.html][99-platformio-udev.rules]]

#+BEGIN_SRC sh :noweb yes
# Recommended
curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/master/scripts/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules

# OR, manually download and copy this file to destination folder
sudo cp 99-platformio-udev.rules /etc/udev/rules.d/99-platformio-udev.rules

# Restart udev management tool
sudo service udev restart

# or
sudo udevadm control --reload-rules
sudo udevadm trigger

# Ubuntu/Debian users may need to add own “username” to the “dialout” group
sudo usermod -a -G dialout $USER
sudo usermod -a -G plugdev $USER
#+END_SRC

*** pip

#+BEGIN_SRC sh :noweb yes
python3 -m venv ~/venvs/<<name>>
source ~/venvs/<<name>>/bin/activate
pip install <<name>>
#+END_SRC

*** guix

Setup guix-janelia channel:

https://github.com/guix-janelia/guix-janelia

#+BEGIN_SRC sh :noweb yes
guix install <<guix-name>>
#+END_SRC

** Windows

*** drivers

Download and install Windows driver:

[[https://www.loadstarsensors.com/drivers-for-usb-load-cells-and-load-cell-interfaces.html][Loadstar Sensors Windows Driver]]

*** pip

#+BEGIN_SRC sh :noweb yes
python3 -m venv C:\venvs\<<name>>
C:\venvs\<<name>>\Scripts\activate
pip install <<name>>
#+END_SRC

* Development

[[./DEVELOPMENT.md][DEVELOPMENT.md]]

* Development.md                                                   :noexport:

#+BEGIN_SRC markdown :tangle DEVELOPMENT.md :noweb yes
# Install Guix
[Install Guix](https://guix.gnu.org/manual/en/html_node/Binary-Installation.html)

# Clone Repository

```shell
git clone <<url>>
cd <<repository-name>>
```

# Edit .single-source-of-truth

```shell
make dev-shell
make edits
make files
exit
```

# Test Python package using ipython shell

```shell
make ipython-shell
import <<name>>
exit
```

# Test installation of Guix package

```shell
make installed-shell
exit
```

# Test command line interface

```shell
make installed-shell
<<command-line-interface>>
exit
```

# Upload Python package to pypi

```shell
make dev-shell
make upload
exit
```

# Test direct device interaction using serial terminal

```shell
make serial-shell
? # help
settings
[C-a][C-x] # to exit
```
#+END_SRC

* Tangled Files                                                    :noexport:

#+BEGIN_SRC scheme :tangle .guix.scm :exports none :noweb yes
;; .guix.scm is generated automatically from .single-source-of-truth.org
;; File edits may be overwritten!

(use-modules
 (guix packages)
 (guix git-download)
 (guix gexp)
 ((guix licenses) #:prefix license:)
 (guix build-system python)
 (gnu packages base)
 (gnu packages emacs)
 (gnu packages emacs-xyz)
 (gnu packages python-build)
 (gnu packages python-xyz)
 (gnu packages version-control)
 (guix-janelia packages python-janelia)
 (guix-janelia packages python-xyz))

(define %source-dir (dirname (current-filename)))

(define-public python-dev-package
  (package
    (name "python-dev-package")
    (version "dev")
    (source (local-file %source-dir
                        #:recursive? #t
                        #:select? (git-predicate %source-dir)))
    (build-system python-build-system)
    (native-inputs (list gnu-make
                         git
                         emacs
                         emacs-org
                         emacs-ox-gfm
                         python-wheel
                         python-twine
                         python-ipython))
    (propagated-inputs (list
                        <<guix-dependencies>>))
    (home-page "")
    (synopsis "")
    (description "")
    (license <<guix-license>>)))

python-dev-package
#+END_SRC

#+BEGIN_SRC text :tangle pyproject.toml :exports none :noweb yes
# pyproject.toml is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
[build-system]
requires = ["setuptools"]
build-backed = "setuptools.build_meta"
#+END_SRC

#+BEGIN_SRC text :tangle setup.cfg :exports none :noweb yes
# setup.cfg is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
[metadata]
name = <<name>>
version = <<version>>
author = <<author>>
author_email = <<email>>
url = <<url>>
description = <<description>>
long_description = file: README.md
long_description_content_type = text/markdown
license = <<license>>
license_files = <<license-files>>
classifiers =
    Programming Language :: Python :: 3

[options]
packages = find:
install_requires =
    <<python-dependencies>>

[options.entry_points]
console_scripts =
    <<command-line-interface>> = <<name>>.cli:main
#+END_SRC

#+BEGIN_SRC python :tangle setup.py :exports none :noweb yes
# setup.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
from setuptools import setup


if __name__ == '__main__':
    setup()
#+END_SRC

#+BEGIN_SRC python :tangle loadstar_sensors_interface/__about__.py :exports none :noweb yes
# __about__.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
__version__ = '<<version>>'
__description__ = '<<description>>'
__license__ = '<<license>>'
__url__ = '<<url>>'
__author__ = '<<author>>'
__email__ = '<<email>>'
__copyright__ = '<<copyright>>'
#+END_SRC

#+BEGIN_SRC python :tangle loadstar_sensors_interface/__init__.py :exports none :noweb yes
'''
<<description>>
'''

# __init__.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
from loadstar_sensors_interface.__about__ import (
    __author__,
    __copyright__,
    __email__,
    __license__,
    __description__,
    __url__,
    __version__)

from .loadstar_sensors_interface import LoadstarSensorsInterface, ScaleFactor
#+END_SRC
